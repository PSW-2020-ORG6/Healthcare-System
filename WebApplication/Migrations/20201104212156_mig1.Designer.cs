// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Backend.Model;

namespace WebApplication.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20201104212156_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Accounts.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Guest")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = "0002",
                            Contact = "kontakt",
                            DateOfBirth = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email",
                            Gender = "Zensko",
                            Guest = true,
                            Name = "Jelena",
                            ParentName = "otac",
                            Password = "sifra",
                            SerialNumber = "2eb30a4d-9fac-4c4f-b29b-cc2c11a39a41",
                            Surname = "Tanjic"
                        },
                        new
                        {
                            Id = "0003",
                            Contact = "kontaktMica",
                            DateOfBirth = new DateTime(2018, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emailMica",
                            Gender = "Zensko",
                            Guest = true,
                            Name = "Sara",
                            ParentName = "mama",
                            Password = "sifraMica",
                            SerialNumber = "fb991288-29be-4b06-a062-4bab45fd0ec8",
                            Surname = "Milic"
                        });
                });

            modelBuilder.Entity("Model.Blog.Feedback", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PatientId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            SerialNumber = "1279749f-3344-4d73-afc3-25d06431492e",
                            Approved = true,
                            Date = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0002",
                            Text = "komentara3"
                        },
                        new
                        {
                            SerialNumber = "3edfdd60-2df9-4b1f-a5a7-e343f105daa1",
                            Approved = true,
                            Date = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0003",
                            Text = "komentara3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
