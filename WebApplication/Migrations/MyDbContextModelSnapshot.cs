// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Backend.Model;

namespace WebApplication.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Accounts.Account", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("AddressSerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Id")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.HasIndex("AddressSerialNumber");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Account");
                });

            modelBuilder.Entity("Model.Accounts.Specialization", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("PhysitianSerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.HasIndex("PhysitianSerialNumber");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("Model.Hospital.Equipment", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProcedureTypeSerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.HasIndex("ProcedureTypeSerialNumber");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("Model.MedicalExam.Report", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Findings")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PatientConditions")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Model.Schedule.ProcedureType", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("ProcedureTypes");
                });

            modelBuilder.Entity("Model.Util.Address", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Street")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Model.Accounts.Physitian", b =>
                {
                    b.HasBaseType("Model.Accounts.Account");

                    b.HasDiscriminator().HasValue("Physitian");
                });

            modelBuilder.Entity("Model.Accounts.Account", b =>
                {
                    b.HasOne("Model.Util.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressSerialNumber");
                });

            modelBuilder.Entity("Model.Accounts.Specialization", b =>
                {
                    b.HasOne("Model.Accounts.Physitian", null)
                        .WithMany("Specialization")
                        .HasForeignKey("PhysitianSerialNumber");
                });

            modelBuilder.Entity("Model.Hospital.Equipment", b =>
                {
                    b.HasOne("Model.Schedule.ProcedureType", null)
                        .WithMany("RequiredEquipment")
                        .HasForeignKey("ProcedureTypeSerialNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
