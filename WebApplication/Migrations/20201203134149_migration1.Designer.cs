// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Backend.Model;

namespace WebApplication.Migrations
{
    [DbContext(typeof(UtilDbContext))]
    [Migration("20201203134149_migration1")]
    partial class migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Accounts.Patient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("AddressSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ChosenDoctor")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Citizenship")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("EmploymentStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FamilyDiseases")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Guest")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HealthInsuranceNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Image")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MunicipalityOfBirth")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MunicipalityOfResidence")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nationality")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ParentName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PersonalDiseases")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PlaceOfResidence")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Profession")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StateOfBirth")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StateOfResidence")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = "0002",
                            ChosenDoctor = "Gojko Simic",
                            Contact = "kontakt",
                            DateOfBirth = new DateTime(2017, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email",
                            EmailConfirmed = false,
                            FullName = "Jelena Tanjic",
                            Gender = "Zensko",
                            Guest = true,
                            Name = "Jelena",
                            ParentName = "otac",
                            Password = "sifra",
                            SerialNumber = "96736fd7-3018-4f3f-a14b-35610a1c8959",
                            Surname = "Tanjic"
                        },
                        new
                        {
                            Id = "0003",
                            ChosenDoctor = "Gojko Simic",
                            Contact = "kontaktMica",
                            DateOfBirth = new DateTime(2018, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emailMica",
                            EmailConfirmed = false,
                            FullName = "Sara Milic",
                            Gender = "Zensko",
                            Guest = true,
                            Name = "Sara",
                            ParentName = "mama",
                            Password = "sifraMica",
                            SerialNumber = "b7e5f8f4-8612-4bf0-93b0-68ef5accf24d",
                            Surname = "Milic"
                        });
                });

            modelBuilder.Entity("Model.Accounts.Physitian", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("AddressSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.HasAlternateKey("Id");

                    b.ToTable("Physitian");

                    b.HasData(
                        new
                        {
                            SerialNumber = "600001",
                            AddressSerialNumber = "200001",
                            Contact = "Simic kontakt",
                            DateOfBirth = new DateTime(1975, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "simic@gmail.com",
                            FullName = "Gojko Simic",
                            Id = "600001",
                            Name = "Gojko",
                            Password = "sifraSimic24dsf1",
                            Surname = "Simic"
                        },
                        new
                        {
                            SerialNumber = "600002",
                            AddressSerialNumber = "200002",
                            Contact = "Dicic kontakt",
                            DateOfBirth = new DateTime(1985, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dicic@gmail.com",
                            FullName = "Klara Dicic",
                            Id = "600002",
                            Name = "Klara",
                            Password = "sifraDicic98754",
                            Surname = "Dicic"
                        });
                });

            modelBuilder.Entity("Model.Accounts.Specialization", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            SerialNumber = "500001",
                            Name = "Neurosurgeon "
                        },
                        new
                        {
                            SerialNumber = "500002",
                            Name = "Family doctor"
                        });
                });

            modelBuilder.Entity("Model.Blog.Feedback", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PatientId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Feedback");

                    b.HasData(
                        new
                        {
                            SerialNumber = "aeded527-e03c-4acd-afa4-45fcdcb89075",
                            Approved = true,
                            Date = new DateTime(2016, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0001",
                            Text = "super"
                        },
                        new
                        {
                            SerialNumber = "0a437aa3-d467-473e-8216-64f3eb4683ee",
                            Approved = false,
                            Date = new DateTime(2015, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0001",
                            Text = "onako"
                        },
                        new
                        {
                            SerialNumber = "af850575-8fe4-42f0-9cc4-1ab08e5fccf2",
                            Approved = true,
                            Date = new DateTime(2018, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0002",
                            Text = "moze bolje"
                        },
                        new
                        {
                            SerialNumber = "d01c84ba-bc44-4a02-a165-dae638f67456",
                            Approved = false,
                            Date = new DateTime(2019, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0003",
                            Text = "dobro"
                        },
                        new
                        {
                            SerialNumber = "ef956514-d2c7-4d69-8119-392a9aa70b7d",
                            Approved = true,
                            Date = new DateTime(2019, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0007",
                            Text = "nikako"
                        },
                        new
                        {
                            SerialNumber = "80e9cf29-70b5-49fe-9e2c-c545d6c74e7b",
                            Approved = false,
                            Date = new DateTime(2019, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0008",
                            Text = "sve pohvale"
                        },
                        new
                        {
                            SerialNumber = "183a520e-d712-4f75-9ec3-49bdafd2d395",
                            Approved = true,
                            Date = new DateTime(2020, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "00010",
                            Text = "usluga na nivou"
                        },
                        new
                        {
                            SerialNumber = "c9b789d3-d6c8-4459-96e7-d83c568337a1",
                            Approved = false,
                            Date = new DateTime(2018, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PatientId = "0004",
                            Text = "ok"
                        });
                });

            modelBuilder.Entity("Model.Hospital.Equipment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("BuildingSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FloorSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoomId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoomSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Equipment");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Equipment");

                    b.HasData(
                        new
                        {
                            Id = "11",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1001",
                            Name = "Bed",
                            RoomId = "101",
                            RoomSerialNumber = "101",
                            SerialNumber = "73"
                        },
                        new
                        {
                            Id = "12",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1001",
                            Name = "Bed",
                            RoomId = "102",
                            RoomSerialNumber = "101",
                            SerialNumber = "74"
                        },
                        new
                        {
                            Id = "13",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1001",
                            Name = "Bed",
                            RoomId = "103",
                            RoomSerialNumber = "101",
                            SerialNumber = "75"
                        },
                        new
                        {
                            Id = "14",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1001",
                            Name = "Bed",
                            RoomId = "101",
                            RoomSerialNumber = "101",
                            SerialNumber = "76"
                        },
                        new
                        {
                            Id = "15",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1002",
                            Name = "Bed",
                            RoomId = "102",
                            RoomSerialNumber = "106",
                            SerialNumber = "77"
                        },
                        new
                        {
                            Id = "16",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1002",
                            Name = "Table",
                            RoomId = "104",
                            RoomSerialNumber = "106",
                            SerialNumber = "78"
                        },
                        new
                        {
                            Id = "17",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1002",
                            Name = "Table",
                            RoomId = "111",
                            RoomSerialNumber = "107",
                            SerialNumber = "79"
                        },
                        new
                        {
                            Id = "18",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1002",
                            Name = "Table",
                            RoomId = "111",
                            RoomSerialNumber = "107",
                            SerialNumber = "80"
                        },
                        new
                        {
                            Id = "19",
                            BuildingSerialNumber = "10002",
                            FloorSerialNumber = "1003",
                            Name = "Bed",
                            RoomId = "112",
                            RoomSerialNumber = "114",
                            SerialNumber = "81"
                        },
                        new
                        {
                            Id = "20",
                            BuildingSerialNumber = "10002",
                            FloorSerialNumber = "1003",
                            Name = "Bed",
                            RoomId = "112",
                            RoomSerialNumber = "114",
                            SerialNumber = "82"
                        });
                });

            modelBuilder.Entity("Model.Hospital.Medicine", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("CopyrightName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("GenericName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MedicineManufacturerSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MedicineTypeSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Medicine");

                    b.HasData(
                        new
                        {
                            SerialNumber = "21",
                            CopyrightName = "Brufen",
                            GenericName = "Brufen",
                            MedicineManufacturerSerialNumber = "1",
                            MedicineTypeSerialNumber = "11"
                        },
                        new
                        {
                            SerialNumber = "22",
                            CopyrightName = "Probiotic",
                            GenericName = "Probiotic",
                            MedicineManufacturerSerialNumber = "2",
                            MedicineTypeSerialNumber = "12"
                        });
                });

            modelBuilder.Entity("Model.Hospital.MedicineManufacturer", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("MedicineManufacturer");

                    b.HasData(
                        new
                        {
                            SerialNumber = "1",
                            Name = "manufacturer1"
                        },
                        new
                        {
                            SerialNumber = "2",
                            Name = "manufacturer2"
                        });
                });

            modelBuilder.Entity("Model.Hospital.MedicineType", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("MedicineType");

                    b.HasData(
                        new
                        {
                            SerialNumber = "11",
                            Type = "Antibiotic"
                        },
                        new
                        {
                            SerialNumber = "12",
                            Type = "Brufen"
                        });
                });

            modelBuilder.Entity("Model.Hospital.Room", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("BuildingSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<int>("ColumnSpan")
                        .HasColumnType("int");

                    b.Property<string>("FloorSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoomTypeSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("RowSpan")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            SerialNumber = "101",
                            BuildingSerialNumber = "10001",
                            Column = 0,
                            ColumnSpan = 5,
                            FloorSerialNumber = "1001",
                            Id = 101,
                            Name = "Examination room 101",
                            RoomTypeSerialNumber = "10000003",
                            Row = 0,
                            RowSpan = 3,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "102",
                            BuildingSerialNumber = "10001",
                            Column = 10,
                            ColumnSpan = 4,
                            FloorSerialNumber = "1001",
                            Id = 102,
                            Name = "Examination room 102",
                            RoomTypeSerialNumber = "10000003",
                            Row = 0,
                            RowSpan = 2,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "103",
                            BuildingSerialNumber = "10001",
                            Column = 5,
                            ColumnSpan = 3,
                            FloorSerialNumber = "1001",
                            Id = 103,
                            Name = "Store room 103",
                            RoomTypeSerialNumber = "10000002",
                            Row = 0,
                            RowSpan = 2,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "104",
                            BuildingSerialNumber = "10001",
                            Column = 14,
                            ColumnSpan = 5,
                            FloorSerialNumber = "1001",
                            Id = 104,
                            Name = "Examination room 104",
                            RoomTypeSerialNumber = "10000003",
                            Row = 0,
                            RowSpan = 3,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "105",
                            BuildingSerialNumber = "10001",
                            Column = 9,
                            ColumnSpan = 5,
                            FloorSerialNumber = "1001",
                            Id = 105,
                            Name = "Store room 105",
                            RoomTypeSerialNumber = "10000002",
                            Row = 10,
                            RowSpan = 2,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "106",
                            BuildingSerialNumber = "10001",
                            Column = 0,
                            ColumnSpan = 7,
                            FloorSerialNumber = "1002",
                            Id = 106,
                            Name = "Operation room 106",
                            RoomTypeSerialNumber = "10000001",
                            Row = 0,
                            RowSpan = 4,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "107",
                            BuildingSerialNumber = "10001",
                            Column = 0,
                            ColumnSpan = 7,
                            FloorSerialNumber = "1002",
                            Id = 107,
                            Name = "Operation room 107",
                            RoomTypeSerialNumber = "10000001",
                            Row = 8,
                            RowSpan = 4,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "108",
                            BuildingSerialNumber = "10001",
                            Column = 10,
                            ColumnSpan = 3,
                            FloorSerialNumber = "1002",
                            Id = 108,
                            Name = "Store room 108",
                            RoomTypeSerialNumber = "10000002",
                            Row = 0,
                            RowSpan = 2,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "109",
                            BuildingSerialNumber = "10002",
                            Column = 0,
                            ColumnSpan = 0,
                            FloorSerialNumber = "1003",
                            Id = 109,
                            Name = "Examination room 109",
                            RoomTypeSerialNumber = "10000003",
                            Row = 0,
                            RowSpan = 0,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "110",
                            BuildingSerialNumber = "10002",
                            Column = 0,
                            ColumnSpan = 0,
                            FloorSerialNumber = "1003",
                            Id = 110,
                            Name = "Operation room 110",
                            RoomTypeSerialNumber = "10000001",
                            Row = 0,
                            RowSpan = 0,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "111",
                            BuildingSerialNumber = "10002",
                            Column = 0,
                            ColumnSpan = 0,
                            FloorSerialNumber = "1003",
                            Id = 111,
                            Name = "Examination room 111",
                            RoomTypeSerialNumber = "10000003",
                            Row = 0,
                            RowSpan = 0,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "112",
                            BuildingSerialNumber = "10002",
                            Column = 0,
                            ColumnSpan = 0,
                            FloorSerialNumber = "1003",
                            Id = 112,
                            Name = "Store room 112",
                            RoomTypeSerialNumber = "10000002",
                            Row = 0,
                            RowSpan = 0,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "113",
                            BuildingSerialNumber = "10002",
                            Column = 0,
                            ColumnSpan = 0,
                            FloorSerialNumber = "1003",
                            Id = 113,
                            Name = "Examination room 113",
                            RoomTypeSerialNumber = "10000003",
                            Row = 0,
                            RowSpan = 0,
                            Style = "RoomButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "114",
                            BuildingSerialNumber = "10002",
                            Column = 0,
                            ColumnSpan = 0,
                            FloorSerialNumber = "1003",
                            Id = 114,
                            Name = "Examination room 114",
                            RoomTypeSerialNumber = "10000003",
                            Row = 0,
                            RowSpan = 0,
                            Style = "RoomButtonStyle"
                        });
                });

            modelBuilder.Entity("Model.Hospital.RoomType", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("RoomType");

                    b.HasData(
                        new
                        {
                            SerialNumber = "10000001",
                            Name = "Operation room"
                        },
                        new
                        {
                            SerialNumber = "10000002",
                            Name = "Store room"
                        },
                        new
                        {
                            SerialNumber = "10000003",
                            Name = "Examination room"
                        });
                });

            modelBuilder.Entity("Model.MedicalExam.Report", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Findings")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PatientConditions")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("PhysitianSerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProcedureTypeSerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.HasIndex("PatientId");

                    b.HasIndex("PhysitianSerialNumber");

                    b.HasIndex("ProcedureTypeSerialNumber");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Model.Schedule.Appointment", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<bool>("Urgency")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("SerialNumber");

                    b.ToTable("Appointment");

                    b.HasData(
                        new
                        {
                            SerialNumber = "200001",
                            Urgency = true
                        },
                        new
                        {
                            SerialNumber = "200002",
                            Urgency = false
                        });
                });

            modelBuilder.Entity("Model.Schedule.ProcedureType", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("EstimatedTimeInMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("ProcedureType");

                    b.HasData(
                        new
                        {
                            SerialNumber = "300001",
                            EstimatedTimeInMinutes = 50,
                            Name = "Operation on patient 0002"
                        },
                        new
                        {
                            SerialNumber = "300002",
                            EstimatedTimeInMinutes = 78,
                            Name = "Check on patient 0002"
                        });
                });

            modelBuilder.Entity("Model.Util.Address", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Street")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            SerialNumber = "200001",
                            Street = "Njegoševa 45"
                        },
                        new
                        {
                            SerialNumber = "200002",
                            Street = "Njegoševa 46"
                        });
                });

            modelBuilder.Entity("Model.Util.TimeInterval", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("TimeInterval");

                    b.HasData(
                        new
                        {
                            Id = "600001",
                            End = new DateTime(2020, 12, 3, 14, 41, 47, 973, DateTimeKind.Local).AddTicks(6100),
                            Start = new DateTime(2020, 12, 3, 14, 41, 47, 970, DateTimeKind.Local).AddTicks(7280)
                        },
                        new
                        {
                            Id = "600002",
                            End = new DateTime(2020, 12, 3, 14, 41, 47, 973, DateTimeKind.Local).AddTicks(7181),
                            Start = new DateTime(2020, 12, 3, 14, 41, 47, 973, DateTimeKind.Local).AddTicks(7159)
                        });
                });

            modelBuilder.Entity("health_clinic_class_diagram.Backend.Model.Hospital.Building", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Color")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Building");

                    b.HasData(
                        new
                        {
                            SerialNumber = "10001",
                            Color = "Orange",
                            Column = 1,
                            Name = "Cardiology",
                            Row = 5,
                            Style = "TriangleBuildingButtonStyle"
                        },
                        new
                        {
                            SerialNumber = "10002",
                            Color = "Red",
                            Column = 3,
                            Name = "Orthopedy",
                            Row = 5,
                            Style = "UBuildingButtonStyle"
                        });
                });

            modelBuilder.Entity("health_clinic_class_diagram.Backend.Model.Hospital.Floor", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("BuildingSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Floor");

                    b.HasData(
                        new
                        {
                            SerialNumber = "1001",
                            BuildingSerialNumber = "10001",
                            Name = "Floor1"
                        },
                        new
                        {
                            SerialNumber = "1002",
                            BuildingSerialNumber = "10001",
                            Name = "Floor2"
                        },
                        new
                        {
                            SerialNumber = "1003",
                            BuildingSerialNumber = "10002",
                            Name = "Floor1"
                        });
                });

            modelBuilder.Entity("health_clinic_class_diagram.Backend.Model.Schedule.ProcedureTypeEquipmentUsage", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("EquipmentSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ProcedureTypeSerialNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("ProcedureTypeEquipmentUsage");

                    b.HasData(
                        new
                        {
                            SerialNumber = "400001",
                            EquipmentSerialNumber = "81",
                            ProcedureTypeSerialNumber = "300001"
                        },
                        new
                        {
                            SerialNumber = "400002",
                            EquipmentSerialNumber = "82",
                            ProcedureTypeSerialNumber = "300002"
                        });
                });

            modelBuilder.Entity("health_clinic_class_diagram.Backend.Model.Survey.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionText = "The doctor is welcoming and gentle?"
                        },
                        new
                        {
                            Id = 2,
                            QuestionText = "The doctor answered all of your questions in an understandable manner?"
                        },
                        new
                        {
                            Id = 3,
                            QuestionText = "The doctor takes care of you in a professional manner?"
                        },
                        new
                        {
                            Id = 4,
                            QuestionText = "Would you have the procedure done again by this doctor?"
                        },
                        new
                        {
                            Id = 5,
                            QuestionText = "The personal manner(courtosy,respect,sensitivity,friendliness) of the nurses and other support staff?"
                        },
                        new
                        {
                            Id = 6,
                            QuestionText = "The nursees answered all of your questions in an understandable manner?"
                        },
                        new
                        {
                            Id = 7,
                            QuestionText = "Orientation given to warn setup"
                        },
                        new
                        {
                            Id = 8,
                            QuestionText = "The nurse gave you good discharge instructions"
                        },
                        new
                        {
                            Id = 9,
                            QuestionText = "The nurse was concern for you?"
                        },
                        new
                        {
                            Id = 10,
                            QuestionText = "The comfort and cleanliness of the facility"
                        },
                        new
                        {
                            Id = 11,
                            QuestionText = "Comfort level within the procedure room?"
                        },
                        new
                        {
                            Id = 12,
                            QuestionText = "Conditions of the rooms(temperature,comfort,silence)"
                        },
                        new
                        {
                            Id = 13,
                            QuestionText = "General impression of the ambient atmosphere"
                        },
                        new
                        {
                            Id = 14,
                            QuestionText = "Do you think the clinic has the necessary equipment"
                        },
                        new
                        {
                            Id = 15,
                            QuestionText = "Do you think the clinic's farmacy has the necessary drugs?"
                        },
                        new
                        {
                            Id = 16,
                            QuestionText = "Do you think that the hospital should have more modern equipment than the current one"
                        },
                        new
                        {
                            Id = 17,
                            QuestionText = "Did you noticed broken or damaged equipment in the hospital"
                        },
                        new
                        {
                            Id = 18,
                            QuestionText = "The doctor prescribed medications that I could buy at the clinic's pharmacy"
                        },
                        new
                        {
                            Id = 19,
                            QuestionText = "Did you found it easy to use our website?"
                        },
                        new
                        {
                            Id = 20,
                            QuestionText = "Did you have found all the necessary information on our website?"
                        },
                        new
                        {
                            Id = 21,
                            QuestionText = "Overall, are you satisfied with the care you received in this facility?"
                        },
                        new
                        {
                            Id = 22,
                            QuestionText = "Would you come to this institution again"
                        },
                        new
                        {
                            Id = 23,
                            QuestionText = ">Would you recommend this facility to your friends and family"
                        });
                });

            modelBuilder.Entity("health_clinic_class_diagram.Backend.Model.Survey.Survey", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("DoctorName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question10")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question11")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question12")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question13")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question14")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question15")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question16")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question17")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question18")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question19")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question20")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question21")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question22")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question23")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question4")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question5")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question6")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question7")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question8")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Question9")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SerialNumber");

                    b.ToTable("Survey");

                    b.HasData(
                        new
                        {
                            SerialNumber = "1a3f875c-94bd-490d-a551-dacea8bdf036",
                            DoctorName = "Pera Peric",
                            ID = "001",
                            Question1 = "5",
                            Question10 = "5",
                            Question11 = "2",
                            Question12 = "5",
                            Question13 = "5",
                            Question14 = "5",
                            Question15 = "5",
                            Question16 = "5",
                            Question17 = "5",
                            Question18 = "5",
                            Question19 = "5",
                            Question2 = "5",
                            Question20 = "5",
                            Question21 = "3",
                            Question22 = "2",
                            Question23 = "4",
                            Question3 = "5",
                            Question4 = "5",
                            Question5 = "4",
                            Question6 = "3",
                            Question7 = "5",
                            Question8 = "5",
                            Question9 = "1"
                        },
                        new
                        {
                            SerialNumber = "fc525c2c-beb5-4ea7-8a47-f5b9c9cbb70e",
                            DoctorName = "Mika Mikic",
                            ID = "005",
                            Question1 = "5",
                            Question10 = "5",
                            Question11 = "2",
                            Question12 = "5",
                            Question13 = "5",
                            Question14 = "5",
                            Question15 = "5",
                            Question16 = "5",
                            Question17 = "5",
                            Question18 = "5",
                            Question19 = "5",
                            Question2 = "5",
                            Question20 = "5",
                            Question21 = "3",
                            Question22 = "2",
                            Question23 = "4",
                            Question3 = "5",
                            Question4 = "5",
                            Question5 = "4",
                            Question6 = "3",
                            Question7 = "5",
                            Question8 = "5",
                            Question9 = "1"
                        });
                });

            modelBuilder.Entity("Model.Hospital.Bed", b =>
                {
                    b.HasBaseType("Model.Hospital.Equipment");

                    b.Property<string>("PatientID")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasDiscriminator().HasValue("Bed");

                    b.HasData(
                        new
                        {
                            Id = "100001",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1001",
                            Name = "Bed 1",
                            RoomId = "101",
                            RoomSerialNumber = "101",
                            SerialNumber = "100001",
                            PatientID = "0002"
                        },
                        new
                        {
                            Id = "100002",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1001",
                            Name = "Bed 2",
                            RoomId = "102",
                            RoomSerialNumber = "101",
                            SerialNumber = "100002",
                            PatientID = "0003"
                        },
                        new
                        {
                            Id = "100003",
                            BuildingSerialNumber = "10001",
                            FloorSerialNumber = "1001",
                            Name = "Bed 3",
                            RoomId = "103",
                            RoomSerialNumber = "102",
                            SerialNumber = "100003"
                        });
                });

            modelBuilder.Entity("Model.MedicalExam.Report", b =>
                {
                    b.HasOne("Model.Accounts.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("Model.Accounts.Physitian", "Physitian")
                        .WithMany()
                        .HasForeignKey("PhysitianSerialNumber");

                    b.HasOne("Model.Schedule.ProcedureType", "ProcedureType")
                        .WithMany()
                        .HasForeignKey("ProcedureTypeSerialNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
